{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/classes.ts","webpack:///src/app/constants.ts","webpack:///src/app/shared/custom-icon-registry.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/time-picker.ts","webpack:///src/app/shared/timer/timer.component.ts","webpack:///src/app/shared/timer/timer.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","_snackBar","_timePicker","title","mode","isOpened","isSideBySide","sideBySideWidth","isTransitioning","repeatMode","timerOptions","currentTimerOptionIndex","newTimerOption","window","console","log","Worker","onResize","innerWidth","width","sideNav","toggle","event","previousIndex","currentIndex","length","isRepeat","push","open","duration","timerOption","index","slice","clone","setDate","parseDate","time","hour","min","sec","show","valueChanges","pipe","subscribe","option","splice","snackBarRef","onAction","copyTimerOption","onFinish","pickTime","drop","addTimerOption","selector","templateUrl","svgIconProviders","provide","useValue","name","svgSource","multi","namespace","AppModule","useClass","register","enabled","production","declarations","imports","providers","bootstrap","TimerOption","Time","secUnit","minUnit","hourUnit","dayUnit","SVG_ICONS","DEFAULT_NS","CustomIconRegistry","http","sanitizer","document","svgIcons","preloadedSvgElements","loadSvgElements","iconName","nsIconMap","preloadedElement","cloneNode","div","createElement","forEach","icon","ns","innerHTML","querySelector","Document","SharedModule","targetElement","TimePicker","format","controls","inline","headers","_valueChanges","emitValue","splitValue","getDate","split","map","str","Number","parseInt","next","eventName","addEventListener","providedIn","fps","interval","Math","round","TimerComponent","finish","_msec","intervalId","setInterval","clearInterval","_time","toMillisecond","setMSec","emit","floor","styleUrls","environment","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, ViewChild, HostListener, OnInit } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { TimerOption, Time } from './classes';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { TimePicker } from './shared/time-picker';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent implements OnInit {\n  title = 'timer';\n  mode: 'over' | 'side' = 'side';\n  isOpened = true;\n  isSideBySide = true;\n  @ViewChild(MatSidenav, { static: true })\n  sideNav: MatSidenav;\n  private sideBySideWidth = 992;\n  isTransitioning = false;\n\n  private repeatMode: 'repeat' | 'repeatOne' | 'noRepeat' = 'repeat';\n  get isRepeat() {\n    return this.repeatMode == 'repeat';\n  }\n  timerOptions: TimerOption[] = [\n    new TimerOption(new Time(0, 0, 1), 'One'),\n    new TimerOption(new Time(0, 0, 2), 'Two'),\n    new TimerOption(new Time(0, 0, 3)),\n  ];\n  currentTimerOptionIndex = 0;\n  get currentTimerOption() {\n    return this.timerOptions[this.currentTimerOptionIndex];\n  }\n\n  newTimerOption = new TimerOption(new Time(0, 0, 0));\n\n  constructor(private _snackBar: MatSnackBar, private _timePicker: TimePicker) { }\n\n  ngOnInit() {\n    // Do not initialize the search on browsers that lack web worker support\n    if ('Worker' in window) {\n      // Delay initialization by up to 2 seconds\n      console.log(window.Worker);\n    }\n\n    this.onResize(window.innerWidth);\n  }\n\n  @HostListener('window:resize', ['$event.target.innerWidth'])\n  onResize(width: number) {\n    this.isSideBySide = width >= this.sideBySideWidth;\n    if (this.isSideBySide) {\n      this.sideNav.toggle(true);\n    }\n    this.mode = this.isSideBySide ? 'side' : 'over';\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    if (this.currentTimerOptionIndex == event.previousIndex) {\n      this.currentTimerOptionIndex = event.currentIndex;\n    }\n    moveItemInArray(this.timerOptions, event.previousIndex, event.currentIndex);\n  }\n\n  onFinish() {\n    if (this.currentTimerOptionIndex < this.timerOptions.length - 1) {\n      this.currentTimerOptionIndex += 1;\n    } else if (this.isRepeat) {\n      this.currentTimerOptionIndex = 0;\n    }\n  }\n\n  addTimerOption() {\n    this.timerOptions.push(new TimerOption(new Time(0, 0, 0)));\n    this._snackBar.open('New Timer Added.', null, {\n      duration: 2000\n    });\n  }\n\n  copyTimerOption(timerOption: TimerOption, index: number) {\n    this.timerOptions = [\n      ...this.timerOptions.slice(0, index),\n      timerOption.clone(),\n      ...this.timerOptions.slice(index)\n    ];\n  }\n\n  pickTime(timerOption: TimerOption) {\n    this._timePicker.setDate(this._timePicker.parseDate(`${timerOption.time.hour}:${timerOption.time.min}:${timerOption.time.sec}`));\n    this._timePicker.show();\n    this._timePicker.valueChanges().pipe(take(1))\n      .subscribe(time => timerOption.time = time);\n  }\n\n  deleteTimerOption(index: number) {\n    const option = this.timerOptions.splice(index, 1)[0];\n    const snackBarRef = this._snackBar.open(`Timer ${option.title} has deleted.`, 'Undo', {\n      duration: 3000\n    });\n    snackBarRef.onAction().subscribe(() => {\n      this.copyTimerOption(option, index);\n    });\n  }\n}\n","<mat-toolbar color=\"primary\" class=\"app-toolbar no-print\" [class.transitioning]=\"isTransitioning\">\n  <mat-toolbar-row>\n    <a class=\"nav-link home\" href=\"/\">\n      Timer\n    </a>\n    <div class=\"toolbar-external-icons-container\">\n      <a href=\"https://github.com/MamoruMachida/timer\" title=\"GitHub\" aria-label=\"Angular on github\">\n        <mat-icon svgIcon=\"logos:github\"></mat-icon>\n      </a>\n    </div>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n<mat-sidenav-container class=\"sidenav-container\" role=\"main\">\n\n  <main class=\"sidenav-content\" role=\"main\">\n    <h2 class=\"timer-title\">{{ currentTimerOption.title }}</h2>\n    <app-timer #mainTimer [time]=\"currentTimerOption.time\" (finish)=\"onFinish()\" (click)=\"pickTime(currentTimerOption)\"></app-timer>\n    <!-- temporary controller -->\n    <div class=\"controller\">\n      <button mat-mini-fab aria-label=\"skip previous\" color=\"default\"\n        (click)=\"currentTimerOptionIndex =  currentTimerOptionIndex == 0 ? timerOptions.length - 1 : currentTimerOptionIndex - 1\"\n        [disabled]=\"!isRepeat && currentTimerOptionIndex == 0\">\n        <mat-icon>skip_previous</mat-icon>\n      </button>\n      <ng-container [ngSwitch]=\"mainTimer.isPlaying\">\n        <button *ngSwitchCase=\"true\" mat-fab aria-label=\"pause\" (click)=\"mainTimer.pause()\">\n          <mat-icon>pause</mat-icon>\n        </button>\n        <button *ngSwitchDefault mat-fab aria-label=\"start\" color=\"primary\" (click)=\"mainTimer.start()\"\n          [disabled]=\"!mainTimer.isPlayable\">\n          <mat-icon>play_arrow</mat-icon>\n        </button>\n      </ng-container>\n      <button mat-fab aria-label=\"reset\" color=\"default\" (click)=\"mainTimer.reset()\">\n        <mat-icon>restore</mat-icon>\n      </button>\n      <button mat-mini-fab aria-label=\"skip next\" color=\"default\"\n        (click)=\"currentTimerOptionIndex = currentTimerOptionIndex == timerOptions.length - 1 ? 0 : currentTimerOptionIndex + 1\"\n        [disabled]=\"!isRepeat && currentTimerOptionIndex == timerOptions.length - 1\">\n        <mat-icon>skip_next</mat-icon>\n      </button>\n    </div>\n  </main>\n\n  <button mat-icon-button class=\"hamburger\" (click)=\"sidenav.toggle()\" title=\"Toggle Queue\">\n    <mat-icon>playlist_play</mat-icon>\n  </button>\n\n  <mat-sidenav #sidenav class=\"sidenav\" [ngClass]=\"{'collapsed': !isSideBySide}\" [mode]=\"mode\" [opened]=\"isOpened\"\n    position=\"end\">\n    <div class=\"drop-list\" cdkDropList (cdkDropListDropped)=\"drop($event)\">\n      <mat-card class=\"drop-box timer-queue\" cdkDrag [cdkDragData]=\"timerOption\"\n        *ngFor=\"let timerOption of timerOptions; let i = index\">\n        <mat-icon class=\"drag-handle\">drag_handle</mat-icon>\n        <mat-card-content>\n          <mat-form-field>\n            <mat-label>Title</mat-label>\n            <input matInput type=\"text\" [(ngModel)]=\"timerOption.title\">\n          </mat-form-field>\n          <app-timer [time]=\"timerOption.time\" mode=\"sidebar\" (click)=\"pickTime(timerOption)\"></app-timer>\n        </mat-card-content>\n        <mat-card-actions>\n          <button mat-icon-button (click)=\"copyTimerOption(timerOption, i)\">\n            <mat-icon>file_copy</mat-icon>\n          </button>\n          <button mat-icon-button (click)=\"deleteTimerOption(i)\" [disabled]=\"currentTimerOptionIndex == i\">\n            <ng-container [ngSwitch]=\"currentTimerOptionIndex != i\">\n              <mat-icon *ngSwitchCase=\"true\" color=\"warn\">delete_forever</mat-icon>\n              <mat-icon *ngSwitchDefault title=\"now playing\">play_circle_filled</mat-icon>\n            </ng-container>\n          </button>\n        </mat-card-actions>\n      </mat-card>\n    </div>\n    <button class=\"add-timer-option-button\" mat-raised-button mat-icon-button (click)=\"addTimerOption()\">\n      <mat-icon>add_circle_outline</mat-icon>\n    </button>\n  </mat-sidenav>\n</mat-sidenav-container>\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule, MatIconRegistry } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { CustomIconRegistry, SVG_ICONS } from './shared/custom-icon-registry';\nimport { SharedModule } from './shared/shared.module';\nimport { FormsModule } from '@angular/forms';\n\n\nexport const svgIconProviders = [\n  {\n    provide: SVG_ICONS,\n    useValue: {\n      name: 'close',\n      svgSource:\n        '<svg focusable=\"false\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">' +\n        '<path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />' +\n        '<path d=\"M0 0h24v24H0z\" fill=\"none\" />' +\n        '</svg>',\n    },\n    multi: true,\n  },\n  {\n    provide: SVG_ICONS,\n    useValue: {\n      name: 'insert_comment',\n      svgSource:\n        '<svg focusable=\"false\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">' +\n        '<path d=\"M20 2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14l4 4V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z\" />' +\n        '<path d=\"M0 0h24v24H0z\" fill=\"none\" />' +\n        '</svg>',\n    },\n    multi: true,\n  },\n  {\n    provide: SVG_ICONS,\n    useValue: {\n      name: 'keyboard_arrow_right',\n      svgSource:\n        '<svg focusable=\"false\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">' +\n        '<path d=\"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\" />' +\n        '</svg>',\n    },\n    multi: true,\n  },\n\n  // Namespace: logos\n  {\n    provide: SVG_ICONS,\n    useValue: {\n      namespace: 'logos',\n      name: 'github',\n      svgSource:\n        '<svg focusable=\"false\" viewBox=\"0 0 51.8 50.4\" xmlns=\"http://www.w3.org/2000/svg\">' +\n        '<path d=\"M25.9,0.2C11.8,0.2,0.3,11.7,0.3,25.8c0,11.3,7.3,20.9,17.5,24.3c1.3,0.2,1.7-0.6,1.7-1.2c0-0.6,0-2.6,0-4.8' +\n        'c-7.1,1.5-8.6-3-8.6-3c-1.2-3-2.8-3.7-2.8-3.7c-2.3-1.6,0.2-1.6,0.2-1.6c2.6,0.2,3.9,2.6,3.9,2.6c2.3,3.9,6,2.8,7.5,2.1' +\n        'c0.2-1.7,0.9-2.8,1.6-3.4c-5.7-0.6-11.7-2.8-11.7-12.7c0-2.8,1-5.1,2.6-6.9c-0.3-0.7-1.1-3.3,0.3-6.8c0,0,2.1-0.7,7,2.6' +\n        'c2-0.6,4.2-0.9,6.4-0.9c2.2,0,4.4,0.3,6.4,0.9c4.9-3.3,7-2.6,7-2.6c1.4,3.5,0.5,6.1,0.3,6.8c1.6,1.8,2.6,4.1,2.6,6.9' +\n        'c0,9.8-6,12-11.7,12.6c0.9,0.8,1.7,2.4,1.7,4.7c0,3.4,0,6.2,0,7c0,0.7,0.5,1.5,1.8,1.2c10.2-3.4,17.5-13,17.5-24.3' +\n        'C51.5,11.7,40.1,0.2,25.9,0.2z\" />' +\n        '</svg>',\n    },\n    multi: true,\n  },\n  {\n    provide: SVG_ICONS,\n    useValue: {\n      namespace: 'logos',\n      name: 'twitter',\n      svgSource:\n        '<svg focusable=\"false\" viewBox=\"0 0 50 59\" xmlns=\"http://www.w3.org/2000/svg\">' +\n        '<path d=\"M50,9.3c-1.8,0.8-3.8,1.4-5.9,1.6c2.1-1.3,3.7-3.3,4.5-5.7c-2,1.2-4.2,2-6.5,2.5c-1.9-2-4.5-3.2-7.5-3.2' +\n        'c-5.7,0-10.3,4.6-10.3,10.3c0,0.8,0.1,1.6,0.3,2.3C16.1,16.7,8.5,12.6,3.5,6.4c-0.9,1.5-1.4,3.3-1.4,5.2c0,3.6,1.8,6.7,4.6,8.5' +\n        'C5,20,3.4,19.6,2,18.8c0,0,0,0.1,0,0.1c0,5,3.5,9.1,8.2,10.1c-0.9,0.2-1.8,0.4-2.7,0.4c-0.7,0-1.3-0.1-1.9-0.2' +\n        'c1.3,4.1,5.1,7,9.6,7.1c-3.5,2.8-7.9,4.4-12.7,4.4c-0.8,0-1.6,0-2.4-0.1c4.5,2.9,9.9,4.6,15.7,4.6c18.9,0,29.2-15.6,29.2-29.2' +\n        'c0-0.4,0-0.9,0-1.3C46.9,13.2,48.6,11.4,50,9.3z\" />' +\n        '</svg>',\n    },\n    multi: true,\n  },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n    BrowserAnimationsModule,\n    FormsModule,\n    SharedModule,\n    MatButtonModule,\n    MatCardModule,\n    MatIconModule,\n    MatInputModule,\n    MatSidenavModule,\n    MatSnackBarModule,\n    MatToolbarModule,\n    HttpClientModule,\n    DragDropModule\n  ],\n  providers: [\n    { provide: MatIconRegistry, useClass: CustomIconRegistry },\n    svgIconProviders\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { hourUnit, minUnit, secUnit } from './constants';\n\nexport class TimerOption {\n  constructor(public time: Time, public title?: string) { };\n  clone() {\n    return new TimerOption(this.time.clone(), this.title);\n  }\n};\n\nexport class Time {\n  constructor(public hour: number, public min: number, public sec: number) { }\n  toMillisecond() {\n    return this.hour * hourUnit + this.min * minUnit + this.sec * secUnit;\n  }\n  clone() {\n    return new Time(this.hour, this.min, this.sec);\n  }\n}\n","export const secUnit = 1000;\nexport const minUnit = 60 * secUnit;\nexport const hourUnit = 60 * minUnit;\nexport const dayUnit = 24 * hourUnit;\n","import { InjectionToken, Inject, Injectable, Optional } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { of } from 'rxjs';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { HttpClient } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * Use SVG_ICONS (and SvgIconInfo) as \"multi\" providers to provide the SVG source\n * code for the icons that you wish to have preloaded in the `CustomIconRegistry`\n * For compatibility with the MdIconComponent, please ensure that the SVG source has\n * the following attributes:\n *\n * * `xmlns=\"http://www.w3.org/2000/svg\"`\n * * `focusable=\"false\"` (disable IE11 default behavior to make SVGs focusable)\n * * `height=\"100%\"` (the default)\n * * `width=\"100%\"` (the default)\n * * `preserveAspectRatio=\"xMidYMid meet\"` (the default)\n *\n */\nexport const SVG_ICONS = new InjectionToken<Array<SvgIconInfo>>('SvgIcons');\nexport interface SvgIconInfo {\n  namespace?: string;\n  name: string;\n  svgSource: string;\n}\n\ninterface SvgIconMap {\n  [namespace: string]: {\n    [iconName: string]: SVGElement;\n  };\n}\n\nconst DEFAULT_NS = '$$default';\n\n/**\n * A custom replacement for Angular Material's `MdIconRegistry`, which allows\n * us to provide preloaded icon SVG sources.\n */\n@Injectable()\nexport class CustomIconRegistry extends MatIconRegistry {\n  private preloadedSvgElements: SvgIconMap = {[DEFAULT_NS]: {}};\n\n  constructor(http: HttpClient, sanitizer: DomSanitizer, @Optional() @Inject(DOCUMENT) document: Document,\n    @Inject(SVG_ICONS) svgIcons: SvgIconInfo[]) {\n    super(http, sanitizer, document);\n    this.loadSvgElements(svgIcons);\n  }\n\n  getNamedSvgIcon(iconName: string, namespace?: string) {\n    const nsIconMap = this.preloadedSvgElements[namespace || DEFAULT_NS];\n    const preloadedElement = nsIconMap && nsIconMap[iconName];\n\n    return preloadedElement\n      ? of(preloadedElement.cloneNode(true) as SVGElement)\n      : super.getNamedSvgIcon(iconName, namespace);\n  }\n\n  private loadSvgElements(svgIcons: SvgIconInfo[]) {\n    const div = document.createElement('DIV');\n    svgIcons.forEach(icon => {\n      const ns = icon.namespace || DEFAULT_NS;\n      const nsIconMap = this.preloadedSvgElements[ns] || (this.preloadedSvgElements[ns] = {});\n\n      // SECURITY: the source for the SVG icons is provided in code by trusted developers\n      div.innerHTML = icon.svgSource;\n\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      nsIconMap[icon.name] = div.querySelector('svg')!;\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TimerComponent } from './timer/timer.component';\n\n@NgModule({\n  declarations: [TimerComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [TimerComponent]\n})\nexport class SharedModule { }\n","import { Injectable } from '@angular/core';\nimport Picker from 'pickerjs';\nimport { Subject } from 'rxjs';\nimport { Time } from '../classes';\n\nconst targetElement: HTMLInputElement = document.querySelector('#time-picker');\n\n@Injectable({ providedIn: 'root' })\nexport class TimePicker extends Picker {\n  _valueChanges: Subject<Time> = new Subject();\n\n  valueChanges() {\n    return this._valueChanges;\n  }\n  constructor() {\n    super(targetElement, {\n      format: 'HH:mm:ss',\n      controls: true,\n      inline: true,\n      headers: true\n    });\n    const emitValue = () => {\n      const splitValue = (this.getDate(true) as string).split(':').map(str => Number.parseInt(str));\n      this._valueChanges.next(new Time(splitValue[0], splitValue[1], splitValue[2]));\n    };\n    ['change', 'hide'].forEach(eventName => {\n      targetElement.addEventListener(eventName, emitValue);\n    });\n  }\n}\n","import { Component, Input, EventEmitter, Output } from '@angular/core';\nimport { Time } from 'src/app/classes';\nimport { secUnit, dayUnit, hourUnit, minUnit } from 'src/app/constants';\n\nconst fps = 30;\nconst interval = Math.round(secUnit / fps);\n\n@Component({\n  selector: 'app-timer',\n  templateUrl: './timer.component.html',\n  styleUrls: ['./timer.component.scss']\n})\nexport class TimerComponent {\n  @Output() finish = new EventEmitter();\n  @Input() mode: 'main' | 'sidebar' = 'main';\n  private _time: Time;\n  @Input() set time(time: Time) {\n    this._time = time;\n    this.setMSec();\n  }\n  private _msec = 0;\n  private intervalId = null;\n  get isPlaying() {\n    return !!this.intervalId;\n  }\n  get isPlayable() {\n    return this._msec > 0;\n  }\n  get day() {\n    return Math.floor(this._msec / dayUnit);\n  }\n  get hour() {\n    return Math.floor(this._msec / hourUnit) % 24;\n  }\n  get min() {\n    return Math.floor(this._msec / minUnit) % 60\n  }\n  get sec() {\n    return Math.floor(this._msec / secUnit) % 60;\n  }\n  get splitSec() {\n    return Math.floor((this._msec % secUnit) / 100);\n  }\n\n  start() {\n    if (this.intervalId) {\n      return;\n    }\n    this.intervalId = setInterval(() => {\n      this._msec -= interval;\n      if (this._msec <= 0) {\n        this.onFinish();\n      }\n    }, interval);\n  }\n\n  pause() {\n    clearInterval(this.intervalId);\n    this.intervalId = null;\n  }\n\n  private setMSec() {\n    this._msec = this._time?.toMillisecond() || 0;\n  }\n\n  reset() {\n    this.setMSec();\n  }\n\n  private onFinish() {\n    this._msec = 0;\n    this.finish.emit();\n  }\n}\n","<div class=\"timer\" [ngClass]=\"{sidebar: mode == 'sidebar'}\">\n  <div class=\"hour\">{{ hour | number:'2.0' }}</div>\n  <div class=\"colon\">:</div>\n  <div class=\"min\">{{ min | number:'2.0' }}</div>\n  <div class=\"colon\">:</div>\n  <div class=\"sec\">{{ sec | number:'2.0' }}</div>\n  <div class=\"split-sec\">.{{ splitSec | number:'1.0' }}</div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}